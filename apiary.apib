FORMAT: 1A
HOST: http://localhost:8000

# Social Augmented Reality
SE380 - Software Architecture
Skeletal System

## Current Address [/location/{user_id}/{lat}-{lon}]
Communicate with Google's API to find the address of the user

### Reverse Geolocation for GPS Coordinates [GET]
+ Parameters
    + user_id - The ID number of the user making the request
    + lat (number) - The latitude of the user
    + lon (number) - The longitude of the user

+ Request

        {
            "user_id": "1024",
            "lat": "46.0092",
            "lon": "-48.4452"
        }
    
+ Response 200 (application/json)

        [
            "id": "value"
            "todo": "fill this in"
        ]

+ Response 404 (application/json)

        {
            "Unable to reach the reverse geolocation service. Please try again later."
        }
        
## Nearby Points of Interest [/landmarks/{user_id}/{address_slug}]
Find nearby landmarks and points of interest using an address

### Find nearby landmarks [GET]
+ Parameters
    + user_id - The ID number of the user making the request
    + address_slug (String) - A slugified version of the user's current address
    
+ Request
    
        {
            "user_id": "1024",
            "address": "233-E-Juneau-Ave-Milwaukee-Wi"
        }
        
+ Response 200 (application/json)

        [
            {
                "name": "Parking Lot",
                "description": "Lots of cars park here!",
                "distance": "0.2",
                "unit": "mi",
                "friends_visited": [ 1023, 1025 ]
        ]
        
+ Response 404 (application/json)

        {
            "Unable to find nearby landmarks. Please try again later."
        }

## Suggested Points of Interest [/friends/suggested/{user_id}]

### Find Friends' Suggestions [GET]
+ parameters
    + user_id - The ID number of the user making the request
    
+ Request

        {
            "user_id": "1024"
        }
    
+ Response 200 (application/json)

        [ 1, 3, 14, 26, 142 ]
    
### Submit Point of Interest [POST]
+ parameters
    + user_id - The ID number of the user making the request
    
+ Request

        {
            "user_id": "1024",
            "lat": "46.0092",
            "lon": "-48.4452",
            "title": "A New Landmark",
            "description": "This landmark, my landmark, is the best landmark, I think we all agree. So good. The best."
            "address_slug": "Amurica"
        }
        
+ Response 200 (application/json)

        {
            "Landmark *new_id* saved successfully"
        }
        
+ Response 404 (application/json)

        {
            "Landmark not submitted. Please try again later."
        }